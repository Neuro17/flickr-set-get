#!/usr/bin/env node

'use strict';

var VERSION = '0.0.0';

/**
 * Dependencies
 */
var program = require('commander');
var prompt = require('prompt');
var cli = require('cli');
var fs = require('fs');
var Flickr = require('../lib/Flickr.js');

/**
 * Command line arguments
 */
var setIdValue;
var userIdValue;

// Solves occasional UNABLE_TO_VERIFY_LEAF_SIGNATURE error
process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = '0';

// Fixes weird error for using the "arguments" keyword on some ides
program.args = program['arguments'];

/**
 * Command line program definition
 */
program
  .version(VERSION)
  .args('<setId> <userId>')
  .action(function Æ’(setId, userId) {
    setIdValue = setId;
    userIdValue = userId;
  })
  .option('-k, --apiKey <value>', 'The flickr api key', null, null)
  .option('--setGlobalApiKey', 'Sets or resets a permanent apiKey', null, null)
  .option('-c, --concurrency <n>', 'The number of concurrent requests', parseInt, null)
  .option('-o, --outputDir <s>', 'The directory where to save the downloaded images', null, null)
  .option('-s, --size <s>', 'The size of the image to download (eg. "Original", "Large", "Medium", etc.)', null, null)
  .option('-n, --noOverwrite', 'If set does not overwrite existing files', null, null)
  .parse(process.argv);

main();

/**
 * Checks wheter you want/need to set a global api key for the current user or
 * if you want to run the program
 */
function main() {
  var globalApiKey = getGlobalApiKey();

  if (!program.apiKey && (program.setGlobalApiKey || !globalApiKey)) {
    createGlobalApiKey();
  } else {
    var apiKey = program.apiKey || globalApiKey;
    run(apiKey);
  }
}

/**
 * Run the program to download a flickr set
 * @param {string} apiKey
 */
function run(apiKey) {

  if (!setIdValue || !userIdValue) {
    console.error('You need to pass the flickr "setId" and the "userId" as arguments');
    process.exit(1);
  }

  var options = {};
  if (program.concurrency) options.concurrency = program.concurrency;
  if (program.outputDir) options.outputDir = program.outputDir;
  if (program.size) options.size = program.size;
  if (program.noOverwrite) options.noOverwrite = program.noOverwrite;

  var api = new Flickr(apiKey, options);

  var numPhotos = null;
  var numProcessed = 0;
  var numDownloaded = 0;
  var numSkipped = 0;

  api.on('setInfo', function onSetInfo(info) {
    cli.info('Downloading ' + info.total + ' photos from "' + info.title + '" by ' + info.ownername);
    numPhotos = info.total;
    cli.progress(0);
  });

  api.on('photoDownloaded', function onPhotoDownloaded() {
    numProcessed++;
    numDownloaded++;
    cli.progress(numProcessed / numPhotos);
  });

  api.on('photoSkipped', function onPhotoSkipped() {
    numProcessed++;
    numSkipped++;
    cli.progress(numProcessed / numPhotos);
  });

  api.on('done', function onDone(results) {
    cli.ok('All done. ' + numDownloaded + ' photos downloaded, ' + numSkipped + ' skipped');
  });

  api.on('error', function onError(error) {
    cli.error(error);
    process.exit(1);
  });

  api.downloadSet(setIdValue, userIdValue);
}

/**
 * Createsa a new global api key for the current user
 * prompting him to insert the key
 */
function createGlobalApiKey() {
  cli.info('No api key found. Do you want to set up a global apiKey?' +
    ' Go to "https://www.flickr.com/services/apps/create/apply" to retrieve your.');
  prompt.start();
  prompt.get('apiKey', function onPrompt(error, result) {
    if (error) {
      cli.error(error);
      process.exit(1)
    }

    var apiKeyPath = saveGlobalApiKey(result.apiKey);
    cli.info('Global api key saved into "' + apiKeyPath + '"');
    process.exit(0);
  });
}

/**
 * Saves a given api key as user api key
 * @param {string} apiKey
 * @returns {string}
 */
function saveGlobalApiKey(apiKey) {
  var homePath = process.env.HOME || process.env.USERPROFILE;
  var apiKeyPath = homePath + '/.flickr-set-getrc';
  fs.writeFileSync(apiKeyPath, apiKey);

  return apiKeyPath;
}

/**
 * Retrieves a the global api key for the current user (or null if there's none)
 * @returns {null|string}
 */
function getGlobalApiKey() {
  var homePath = process.env.HOME || process.env.USERPROFILE;
  var apiKeyPath = homePath + '/.flickr-set-getrc';
  if (fs.existsSync(apiKeyPath)) {
    return fs.readFileSync(apiKeyPath, 'utf8');
  }

  return null;
}
